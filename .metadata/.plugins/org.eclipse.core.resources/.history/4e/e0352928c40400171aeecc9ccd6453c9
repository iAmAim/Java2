package interfaces;

import java.rmi.RemoteException;
import java.util.Date;
import java.util.Set;
import java.util.concurrent.ConcurrentLinkedQueue;
import java.util.concurrent.CopyOnWriteArraySet;

public class ChatServerImpl implements ChatServer {
	
	private static String WELCOME_MESSAGE =  "Welcome to mIRC 2017 Edition!!";
	private Set<ChatClient> clients = new CopyOnWriteArraySet<>();
	private static ConcurrentLinkedQueue<String[]> messageQueue = new ConcurrentLinkedQueue<>();

	public String register(ChatClient client) throws RemoteException {
		clients.add(client);
		return WELCOME_MESSAGE;
	}

	// Runs every second
	public synchronized void updateClients(String[] messageArr) {
		Date now = new Date();
		//String[] currentMessage = messageQueue.poll();
		String msg = "";
		String name = "";

		//if (currentMessage != null) {
			// Build the text e.g. name + message + date etc.
			name = messageArr[0];
			msg = name + "(" + now + "): " + messageArr[1];

			// Update all clients
			for (ChatClient client : clients) {
				try {
					client.update(msg);
				} catch (RemoteException ex) {
					clients.remove(client);
					ex.printStackTrace();
				}
			}
		//}

	}

	public void receiveMessage(String[] messageArr) throws RemoteException {
		messageQueue.add(messageArr);
		updateClients(messageArr);
	}

	@Override
	public Set<ChatClient> getUsers() {
		return clients;
	}
}
