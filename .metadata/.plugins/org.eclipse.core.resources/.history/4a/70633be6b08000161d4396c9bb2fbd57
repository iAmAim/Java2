package concurrency;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;
import java.util.concurrent.Callable;
import java.util.concurrent.CompletionService;
import java.util.concurrent.ExecutorCompletionService;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

public class CharacterCount {

	
	public static void main(String[] args) throws IOException{
		ExecutorService executor = Executors.newFixedThreadPool(4);
		BufferedReader reader = new BufferedReader(new FileReader(args[0]));
		Set<Future<Integer>> futureSet = new HashSet<>();
		String s;
		int sum=0;
		CompletionService<Integer> service = new ExecutorCompletionService<Integer>(Executors.newFixedThreadPool(3));
		while( (s=reader.readLine()) != null){
			Callable<Integer> callable = new CallableInt(s); 
			Future<Integer> futureResult = service.submit(callable);
			futureSet.add(futureResult);
			//System.out.println(s);
		}
		
		for(Future<Integer> f : futureSet){
			sum+=service.take().get();
		}
	}
}
