package interfaces;

import java.rmi.RemoteException;
import java.util.Date;
import java.util.Set;
import java.util.concurrent.ConcurrentLinkedQueue;
import java.util.concurrent.CopyOnWriteArraySet;
import java.util.concurrent.DelayQueue;

public class ChatServerImpl implements ChatServer {

	private Set<ChatClient> clients = new CopyOnWriteArraySet<>();
	private static ConcurrentLinkedQueue<String[]> messageQueue = new ConcurrentLinkedQueue<>();

	public void register(ChatClient client) throws RemoteException {

		clients.add(client);
	}

	public String getWelcomeMessage(ChatClient client) {

		return "Welcome to mIRC version 2.0!!";
	}

	// Runs every second
	public synchronized void updateClients() {
		Date now = new Date();
		String[] currentMessage = messageQueue.poll();
		String msg = "";
		String name = "";

		if (currentMessage != null) {
			// Build the text e.g. name + message + date etc.
			name = currentMessage[0];
			msg = name + "(" + now + "): " + currentMessage[1];

			// Update all clients
			for (ChatClient client : clients) {
				try {
					client.update(msg);
				} catch (RemoteException ex) {
					clients.remove(client);
					ex.printStackTrace();
				}
			}
		}

	}

	public void receiveMessage(String[] messageArr) throws RemoteException {
		messageQueue.add(messageArr);
		updateClients();
	}
}
